1、抽象类和接口的区别
　　1）抽象类可以提供成员方法的实现细节，而接口中只能存在public abstract 方法；
　　2）抽象类中的成员变量可以是各种类型的，而接口中的成员变量只能是public static final类型的；
　　3）接口中不能含有静态代码块以及静态方法，而抽象类可以有静态代码块和静态方法；
　　4）一个类只能继承一个抽象类，而一个类却可以实现多个接口。

2、代理模式和装饰者模式的区别
	装饰器模式关注于在一个对象上动态的添加方法，然而代理模式关注于控制对对象的访问。
	换句话 说，用代理模式，代理类（proxy class）可以对它的客户隐藏一个对象的具体信息。
	因此，当使用代理模式的时候，我们常常在一个代理类中创建一个对象的实例。
	并且，当我们使用装饰器模 式的时候，我们通常的做法是将原始对象作为一个参数传给装饰者的构造器。

        我们可以用另外一句话来总结这些差别：使用代理模式，代理和真实对象之间的的关系通常在编译时就已经确定了，
        而装饰者能够在运行时递归地被构造。    

 3、在什么情况下使用建造模式
　　1) 需要生成的产品对象有复杂的内部结构，每一个内部成分本身可以是对象，也可以仅仅是一个对象（即产品对象）的一个组成部分。
　　2) 需要生成的产品对象的属性相互依赖。建造模式可以强制实行一种分步骤进行的建造过程，
	        因此，如果产品对象的一个属性必须在另一个属性被赋值之后才可以被赋值，使用建造模式是一个很好的设计思想。
　　3) 在对象创建过程中会使用到系统中的其他一些对象，这些对象在产品对象的创建过程中不易得到。